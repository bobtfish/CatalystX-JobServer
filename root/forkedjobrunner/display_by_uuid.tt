<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
      <html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<title>Hippie demo</title>
<script src="/static/jquery-1.3.2.min.js" type="text/javascript"></script>
<script src="/static/jquery.progressbar.min.js" type="text/javascript"></script>
<script src="/static/jquery.ev.js" type="text/javascript"></script>
<script src="/static/DUI.js" type="text/javascript"></script>
<script src="/static/Stream.js" type="text/javascript"></script>
<script src="/static/hippie.js" type="text/javascript"></script>
<script src="/static/json2.js" type="text/javascript"></script>
<script src="/static/dump.js" type="text/javascript"></script>
<script src="/static/joose.mini.js" type="text/javascript"></script>

<script type="text/javascript">

//Joose.Storage.Unpacker.patchJSON();
Module("CatalystX.JobServer.JobRunner.Forked.WorkerStatus", function (m) {
    Class("CompletionEstimate", {
        does: Joose.Storage,
        has: {
            step_count: {
                is: "ro",
                init: 0
            },
            steps_taken: {
                is: "ro",
                init: 0
            }
        },
        methods: {
            displayOn: function(s) {
                var percentage = Math.floor(100 * parseInt(this.steps_taken) / parseInt(this.step_count));
                $(s).progressBar(percentage, { barImage: '/static/images/progressbg_black.gif'});
            }
        }
    });
});
Module("CatalystX.JobServer.JobRunner.Job", function (m) {
    Class("Running", {
        does: Joose.Storage,
        has: {
            job: {
                is: "ro",
            }
        },
        methods: {
            displayOn: function(s) {
                alert(this.job.uuid);
            }
        }
    });
});

Module("CatalystX.JobServer.JobDisplay", function (m) {
   Class("Hippie", {
       has: {
           hippie: {
               is: "ro",
               init: function () {
                   new Hippie(
                       document.location.host,
                       5, // Timeout
                       function() { this.connected() },
                       function() { this.disconnected() },
                       function(e) { this.handleMessage(e) },                                                  
                       "[% hippie_path %]"
                   );
               }
           }
       },
       methods: {
           handleMessage: function ($m) {
               var message;
               try {
                     message = Joose.Storage.Unpacker.unpack(e);
                     message.displayOn("#progressbar");
                 } catch (ex) {
                     log_it("got unhandled message, exception: " + ex + " message : " + dump(e));
                 }
           },
           connected: function () {},
           disconnected: function () {},
       }
   });
});
     
function log_it(stuff) {
  $("#log").append(stuff+'<br/>');
}
$(function() {
  $("#progressbar").progressBar({ boxImage: '/static/images/progressbar.gif', barImage: '/static/images/progressbg.gif'});
  var manger = new CatalystX.JobServer.JobDisplay.Hippie(); 
});


</script>
<link rel="stylesheet" href="/static/screen.css" />
</head>
<body>


    <div id="content">

        <span>
        <div id="progressbar"> </div>
        </span>

        <div id="log">

        </div>

    </div>

</body>
</html>
